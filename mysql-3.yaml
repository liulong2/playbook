---
- name: mysql
  hosts: mysql5
  become: true
  become_user: root
  vars:

  tasks:
#    #解决 pip安装时报错
#    - name: yum clean all
#      shell: "yum clean all"
#    - name: yum clean all
#      shell: "rpm --rebuilddb"
#    - name: yum remove epel-release
#      yum:
#        name: epel-release
#        state: removed
##    安装epel-release
#    - name: yum -y install epel-release
#      shell: "yum -y install epel-release"
##      安装 pip
#    - name: installed pip
#      yum:
#        name: python-pip
#        state: latest
##        更新pip
#    - name: update pip
#      shell: "pip install --upgrade pip"
#    - name: yum wget
#      yum:
#        name: wget
#        state: latest
##      安装mysql57-community mysql-devel
#    - name: rpm mysql57-community
#      shell: chdir=/etc/yum.repos.d/  executeble="rpm -ivh http://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm"
#
##    安装mysql-devel
#    - name: Installed mysql-devel
#      yum:
#        name: mysql-devel
#        state: latest
#
##   安装gcc
#    - name: gcc
#      yum:
#        name: gcc
#        state: installed
##        安装python devel
#    - name: yum install python-devel
#      yum:
#        name: python-devel
#        state: installed
#  #      安装MySQL-python
#    - name: MySQL-python
#      pip:
#        name: MySQL-python

#   备份数据库
    - name: dump a database
      mysql_db:
#        login_host: "192.168.0.203"
        login_user: root
        login_password: "root"
        login_port: 3306
        name: all
        target: "/tmp/mysql-{{ansible_default_ipv4.address}}-{{ansible_date_time.date}}.sql"
        state: "dump"
    - name: fetch6
      fetch:
        dest: "/back/lib/mysql-{{ansible_default_ipv4.address}}-{{ansible_date_time.date}}.sql"
        src: "/tmp/mysql-{{ansible_default_ipv4.address}}-{{ansible_date_time.date}}.sql"
        flat: yes

#   执行另一分组
- name: mysql
#  服务器所在组名
  hosts: mysql5
#  是否权限升级
  become: true
#  以什么用户执行命令
  become_user: root
  vars:
  tasks:
#   备份数据库
    - name: mysql
      mysql_db:
#        数据库地址
        login_host: "{{item.ip}}"
#        数据库用户名
        login_user: "{{item.username}}"
#        数据库密码
        login_password: "{{item.password}}"
#        数据库端口号
        login_port: 3306
#        需要备份的数据库名称，all表示全部
        name: all
#        备份文件路径
        target: "/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
#        执行数据库操作dump备份，present建立，absent删除
        state: "dump"
#        编码
        encoding: utf8
#      循环
      loop: "{{packages}}"
#      是否报错后继续执行默认为false
      ignore_errors: true
    #执行报错数据库备份
    - name: shell mysqldump
      shell: "mysqldump -h '{{item.ip}}' -u '{{item.username}}' -p'{{item.password}}' --all-databases --force> '/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql'"
#      结局高版本数据库备份低版本数据库发生的错误
#      shell: "mysqldump --column-statistics=0 -h '{{item.ip}}' -u '{{item.username}}' -p'{{item.password}}' --all-databases --force> '/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql'"
      loop: "{{errormysql}}"
      ignore_errors: true
#      从远程服务器拷贝文件到Tower服务器上
    - name: fetch mysql_db
      fetch:
        dest: "/back/lib/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        src: "/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        flat: yes
      loop: "{{packages}}"
#      从远程服务器拷贝文件到Tower服务器上
    - name: fetch mysqldump
      fetch:
        dest: "/back/lib/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        src: "/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        flat: yes
      loop: "{{errormysql}}"


