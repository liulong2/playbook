---
- name: mysql
  hosts: mysql3
  become: true
  become_user: root
  vars:

  tasks:
#    #解决 pip安装时报错
#    - name: yum clean all
#      shell: "yum clean all"
#    - name: yum clean all
#      shell: "rpm --rebuilddb"
#    - name: yum remove epel-release
#      yum:
#        name: epel-release
#        state: removed
##    安装epel-release
#    - name: yum -y install epel-release
#      shell: "yum -y install epel-release"
#    - name: installed pip
#      yum:
#        name: python-pip
#        state: latest
#    - name: update pip
#      shell: "pip install --upgrade pip"
#
#
#    - name: weget
#      shell: "wget -P /usr/local/yum http://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm"
#    - name: rpm
#      shell: chdir=/usr/local/yum  executeble="rpm -ivh mysql57-community-release-el7-10.noarch.rpm"
#
#    - name: Installed mysql-devel
#      yum:
#        name: mysql-devel
#        state: present
#
#    - name: gcc
#      yum:
#        name: gcc
#        state: installed
#  #      shell: "yum install gcc"
#    - name: MySQL-python
#      pip:
#        name: MySQL-python


    - name: dump a database
      mysql_db:
#        login_host: "192.168.0.203"
        login_user: root
        login_password: "root"
        login_port: 3306
        name: all
        target: "/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        state: "dump"
    - name: fetch6
      fetch:
        dest: "/back/lib/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        src: "/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        flat: yes
- name: mysql
  hosts: mysql4
  become: true
  become_user: root
  vars:
  tasks:
#    - name: loop
#      debug: var = "{{item[0]}}" + "{{item[1]}}"
#      loop:
#        - "{{packages}}"
#        - "{{errormysql}}"
    - name: mysql
      mysql_db:
        login_host: "{{item.ip}}"
        login_user: "{{item.username}}"
        login_password: "{{item.password}}"
        login_port: 3306
        name: all
        target: "/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        state: "dump"
        encoding: utf8
#      when: item.ip != {{errormysql}}.ip
      loop: "{{packages}}"
      ignore_errors: true
    #执行报错数据库备份
    - name: shell mysqldump
      shell: "mysqldump --column-statistics=0 -h '{{item.ip}}' -u '{{item.username}}' -p'{{item.password}}' --all-databases --force> '/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql'"
      loop: "{{errormysql}}"
      ignore_errors: true
    - name: fetch mysql_db
      fetch:
        dest: "/back/lib/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        src: "/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        flat: yes
      loop: "{{packages}}"
    - name: fetch mysqldump
      fetch:
        dest: "/back/lib/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        src: "/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        flat: yes
      loop: "{{errormysql}}"


