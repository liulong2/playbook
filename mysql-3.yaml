---
#   执行另一分组
- name: mysql
#  服务器所在组名
  hosts: mysqldump
#  是否权限升级
  become: true
#  以什么用户执行命令
  become_user: root
  vars:
  tasks:
#   备份数据库
    - name: mysql
      mysql_db:
#        数据库地址
        login_host: "{{item.ip}}"
#        数据库用户名
        login_user: "{{item.username}}"
#        数据库密码
        login_password: "{{item.password}}"
#        数据库端口号
        login_port: 3306
#        需要备份的数据库名称，all表示全部
        name: all
#        备份文件路径
        target: "/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
#        执行数据库操作dump备份，present建立，absent删除
        state: "dump"
#        编码
        encoding: utf8
#      循环
      loop: "{{packages}}"
#        判断是否要执行
      when: mysqltype
#      是否报错后继续执行默认为false
#      ignore_errors: true
#      从远程服务器拷贝文件到Tower服务器上
    - name: fetch mysql_db
      fetch:
        dest: "/back/lib/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        src: "/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        flat: yes
      loop: "{{packages}}"
#        判断是否要执行
      when: mysqltype

#在docker中的mysql备份
- name: dopckermysql
  #  服务器所在组名
  hosts: mysqldocker
  #  是否权限升级
  become: true
  #  以什么用户执行命令
  become_user: root
  vars:
  tasks:
    - debug: var=ansible_all_ipv4_addresses
    - debug: var=ansible_default_ipv4.address
    - name: docker mysqldump
      shell: "docker exec -i {{item.dockerid}} mysqldump -h '{{item.ip}}' -u '{{item.username}}' -p'{{item.password}}' --all-databases --force > '/tmp/mysql-docker-{{item.ip}}-{{ansible_date_time.date}}.sql'"
      loop: "{{dockermysql}}"
      when: "item.ip == ansible_default_ipv4.address&mysqldocker"
#      ignore_errors: true
    - name: fetch mysqldump
      fetch:
        dest: "/back/lib/mysql-docker-{{item.ip}}-{{ansible_date_time.date}}.sql"
        src: "/tmp/mysql-docker-{{item.ip}}-{{ansible_date_time.date}}.sql"
        flat: yes
      loop: "{{dockermysql}}"
      when: mysqldocker

#部分报错服务器
- name: dopckermysql
  #  服务器所在组名
  hosts: mysqldocker
  #  是否权限升级
  become: true
  #  以什么用户执行命令
  become_user: root
  vars:
  tasks:
    #执行报错数据库备份
    - name: shell mysqldump
      shell: "mysqldump -h '{{item.ip}}' -u '{{item.username}}' -p'{{item.password}}' --all-databases --force> '/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql'"
      #      结局高版本数据库备份低版本数据库发生的错误
      #      shell: "mysqldump --column-statistics=0 -h '{{item.ip}}' -u '{{item.username}}' -p'{{item.password}}' --all-databases --force> '/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql'"
      loop: "{{errormysql}}"
      when: mysqldumperror
#      忽略报错
#      ignore_errors: true
    #      从远程服务器拷贝文件到Tower服务器上
    - name: fetch mysqldump
      fetch:
        dest: "/back/lib/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        src: "/tmp/mysql-{{item.ip}}-{{ansible_date_time.date}}.sql"
        flat: yes
      loop: "{{errormysql}}"
      when: mysqldumperror

#部分报错服务器
- name: dopckermysql
  #  服务器所在组名
  hosts: remvefile
  #  是否权限升级
  become: true
  #  以什么用户执行命令
  become_user: root
  vars:
  tasks:
#    cp删除脚本到远程目录
    - name: remve file
      copy:
        src: "/usr/local/ansible-shell/remove.sh"
        dest: "/usr/local/ansible-shell/remove.sh"
        force: yes
        others:
          mode: 644
#          执行删除脚本
    - name: shell remove file
      shell:
        chdir: /usr/local/ansible-shell/
        cmd: ./remove.sh
